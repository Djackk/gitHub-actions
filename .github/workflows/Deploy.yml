name: terraform-deploy

on:
  workflow_dispatch:
    inputs:

jobs:
  Deployment_Check:
    runs-on: ubuntu-latest
    steps:
      - name: Environment
        run: |
          echo "The code is being deployed in Prod"

      - name: Region Check
        run: |
          echo "${{ github.event.inputs.Region }}"

#      - name: Deployment Check Failed
#        if: github.ref_type != 'tag'
#        run: |
#          echo "Please select a Tag/Version for the deployment"
#          exit 1
#      - name: Deployment Check Passed
#        if: github.ref_type == 'tag'
#        run: |
#          echo "Code will be deployed from the tag ${{ github.ref }}"
#          exit 0
  Environment_Setup:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    permissions:
      contents: 'read'
      id-token: 'write'
    needs:
      - Deployment_Check
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: 'projects/932079530572/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
          service_account: 'auto-deploy-standard-svc@sandbox-20220909-4sfsll.iam.gserviceaccount.com'
      - run: echo "${{github.action_path}}" >> $GITHUB_PATH
        shell: bash

      - id: set-matrix
        run: |
          cd env
          args=""
          for dir in ./*/ ;do
          if  ! [[ "$(basename "$dir")" =~ ^dev.* ]];
          then
          args+="\""$(basename "$dir")"\","
          fi
          done
          echo "${args%?}"
          echo ::set-output name=env_matrix::["$(echo "${args%?}")"]
        shell: bash
    outputs:
      env_matrix: ${{ steps.set-matrix.outputs.env_matrix }}

  terraform:
    needs:
      - Environment_Setup
    name: 'Terraform'
    runs-on: ubuntu-latest
    env:
      GOOGLE_CLOUD_PROJECT: sandbox-20220909-4sfsll
    environment: production
    strategy:
      fail-fast: false
      matrix:
        env:  ${{fromJson(needs.Environment_Setup.outputs.env_matrix)}}
        region: [ "us-central1","us-east1" ]

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
#       Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3
#
#      - id: 'auth'
#        name: 'Authenticate to Google Cloud'
#        uses: 'google-github-actions/auth@v0'
#        with:
#          workload_identity_provider: 'projects/932079530572/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
#          service_account: 'auto-deploy-standard-svc@sandbox-20220909-4sfsll.iam.gserviceaccount.com'
#      - run: echo "${{github.action_path}}" >> $GITHUB_PATH
#        shell: bash
#
#      - id: set-matrix
#        run: |
#          cd env
#          args=""
#          for dir in ./*/ ;do
#          args+="\""$(basename "$dir")"\","
#          done
#          echo "${args%?}"
#          echo '::set-output name=env_matrix::[ "${args%?}" ]'
#        shell: bash
#        outputs:
#          env_matrix: ${{ steps.set-matrix.outputs.env_matrix }}

      - name: Build and Apply Terraform
        id: version
        uses: Djackk/gitHub-actions/terraform-build@main
        with:
          branch: ${{github.ref}}
          env: ${{matrix.env}}
          region: ${{matrix.region}}



